<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: myclabs | Matthieu Napoli]]></title>
  <link href="http://mnapoli.fr/categories/myclabs/atom.xml" rel="self"/>
  <link href="http://mnapoli.fr/"/>
  <updated>2014-03-27T12:15:57+01:00</updated>
  <id>http://mnapoli.fr/</id>
  <author>
    <name><![CDATA[Matthieu Napoli]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Overriding dependencies with Composer]]></title>
    <link href="http://mnapoli.fr/overriding-dependencies-with-composer/"/>
    <updated>2013-04-16T20:00:00+02:00</updated>
    <id>http://mnapoli.fr/overriding-dependencies-with-composer</id>
    <content type="html"><![CDATA[<p>At my company, <strong>My C-Sense</strong>, we use Doctrine amongst other PHP frameworks and libraries. When we find bugs (or need new features), we contribute to the project through our <a href="https://github.com/myclabs">open source initiative</a>.</p>

<p>The problem is when we submit a pull request on Github, several months usually happen until our fix appears in a stable release.</p>

<p>To be able to enjoy our bugfixes immediately, here is our workflow:</p>

<ul>
<li>We fork the repository of the project to <a href="https://github.com/myclabs">our organization account</a></li>
<li>We commit and publish the bugfix in a branch of our repository</li>
<li>We submit a Pull Request</li>
<li>We override the dependency to the project with our version in Composer</li>
</ul>


<p>Overriding a dependency <a href="http://getcomposer.org/doc/04-schema.md#repositories">is quite simple</a>: just add your git repository in your <code>composer.json</code> and require you branch.</p>

<p>But when we want to override, for example, <code>doctrine/common</code> which is used by <code>doctrine/orm</code>, then we have a problem: <code>doctrine/orm</code> wants a stable version of <code>doctrine/common</code>, it will conflict with your requirement to a dev branch.</p>

<p>The solution is to <strong>alias your dev branch to a stable release</strong>, and that is possible through the awesome “<a href="http://getcomposer.org/doc/articles/aliases.md#require-inline-alias">inline alias</a>” functionality in Composer.</p>

<!-- more -->


<p>Here is an example:</p>

<p>```json
{</p>

<pre><code>"require": {
    "doctrine/orm": "2.3.*",
    "doctrine/common": "dev-ChainDriverFix as 2.3.0"
},
"repositories": [
    {
        "type": "git",
        "url": "https://github.com/myclabs/common.git"
    }
]
</code></pre>

<p>}
```</p>

<p>Here, our branch <code>ChainDriverFix</code> will override the 2.3.0 version of <code>doctrine/common</code>, which will also be compatible with <code>doctrine/orm</code>!</p>
]]></content>
  </entry>
  
</feed>
